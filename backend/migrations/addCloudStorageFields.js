const path = require('path');

// .env dosyasƒ±nƒ± backend klas√∂r√ºnden y√ºkle (migrations klas√∂r√ºnden √ßalƒ±≈ütƒ±rƒ±ldƒ±ƒüƒ±nda)
require('dotenv').config({ path: path.resolve(__dirname, '../.env') });

// Sequelize ve modelleri doƒürudan backend'den import et
const sequelize = require('../db');

async function addCloudStorageFields() {
  try {
    console.log('üîÑ Cloudflare storage alanlarƒ± ekleniyor...');

    // Products tablosuna cloudurl ve cloudpath alanlarƒ± ekle
    console.log('Products tablosu g√ºncelleniyor...');
    await sequelize.query(`
      ALTER TABLE products 
      ADD COLUMN IF NOT EXISTS cloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS cloudpath VARCHAR(255) NULL;
    `);

    // Category tablosuna cloudurl ve cloudpath alanlarƒ± ekle
    console.log('Categories tablosu g√ºncelleniyor...');
    await sequelize.query(`
      ALTER TABLE categories 
      ADD COLUMN IF NOT EXISTS cloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS cloudpath VARCHAR(255) NULL;
    `);

    // Announcement tablosuna cloud alanlarƒ± ekle
    console.log('Announcements tablosu g√ºncelleniyor...');
    await sequelize.query(`
      ALTER TABLE announcements 
      ADD COLUMN IF NOT EXISTS imagecloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS imagecloudpath VARCHAR(255) NULL,
      ADD COLUMN IF NOT EXISTS backgroundimagecloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS backgroundimagecloudpath VARCHAR(255) NULL;
    `);

    // Business tablosuna cloud alanlarƒ± ekle
    console.log('Businesses tablosu g√ºncelleniyor...');
    await sequelize.query(`
      ALTER TABLE businesses 
      ADD COLUMN IF NOT EXISTS logocloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS logocloudpath VARCHAR(255) NULL,
      ADD COLUMN IF NOT EXISTS bannercloudurl TEXT NULL,
      ADD COLUMN IF NOT EXISTS bannercloudpath TEXT NULL,
      ADD COLUMN IF NOT EXISTS welcomebackgroundcloudurl VARCHAR(500) NULL,
      ADD COLUMN IF NOT EXISTS welcomebackgroundcloudpath VARCHAR(255) NULL;
    `);

    console.log('‚úÖ Cloudflare storage alanlarƒ± ba≈üarƒ±yla eklendi');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Cloudflare storage alanlarƒ± ekleme hatasƒ±:', error);
    process.exit(1);
  } finally {
    // Baƒülantƒ±yƒ± kapat
    await sequelize.close();
  }
}

addCloudStorageFields();
